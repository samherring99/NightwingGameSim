

## background

 

unsigned const char tiledata[] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xDF,0xDF,0xC1,0xC1,0xC0,0xC0,0xC0,0xC0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x3F,0x0F,0x0F,0x01,0x01,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x1F,0x1F,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFE,0xF8,0xF8,
0xFE,0xFE,0xFC,0xFC,0xF8,0xF8,0xF0,0xF0,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x03,0x03,0x07,0x07,0x07,0x07,0x0F,0x0F,
0xE0,0xE0,0xE0,0xE0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF8,0xF8,0xF8,0xF8,0xF8,0xF8,
0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x07,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x0F,0x0F,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x0F,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0xF8,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0xE0,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFC,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,
0xE0,0xE0,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,
0x0F,0x0F,0x1F,0x1F,0x3F,0x3F,0x3F,0x3F,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF8,0xF8,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFE,0xFE,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x40,0xC0,0xC0,0x80,0x80,
0xFF,0xFF,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x0C,0x0C,0x18,0x18,
0x01,0x01,0x03,0x03,0x07,0x07,0x07,0x07,0x0F,0x0F,0x0F,0x0F,0x1F,0x1F,0x1F,0x1F,
0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x02,0x02,0x06,0x06,0x0C,0x0C,0x08,0x08,0x18,0x18,0x30,0x30,0x20,0x20,0x20,0x20,
0x0C,0x0C,0x18,0x18,0x10,0x10,0x20,0x20,0x60,0x60,0x40,0x40,0xC0,0xC0,0x80,0x80,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x03,0x03,0x02,0x02,0x04,0x04,
0x30,0x30,0x20,0x20,0x60,0x60,0xC0,0xC0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x7F,0x7F,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x02,0x02,0x02,0x06,0x06,
0x40,0x40,0xC0,0xC0,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x01,0x01,0x02,0x02,0x06,0x06,0x08,0x08,0x18,0x18,0x30,0x30,0x60,0x60,0x40,0x40,
0x08,0x08,0x18,0x18,0x30,0x30,0x60,0x60,0x40,0x40,0xC0,0xC0,0x80,0x80,0x00,0x00,
0x00,0x00,0x01,0x01,0x01,0x01,0x03,0x03,0x03,0x03,0x03,0x03,0x07,0x07,0x07,0x07,
0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,
0x04,0x04,0x08,0x08,0x08,0x08,0x10,0x10,0x30,0x30,0x20,0x20,0x00,0x00,0x00,0x00,
0x00,0x00,0x01,0x01,0x03,0x03,0x02,0x02,0x06,0x06,0x04,0x04,0x08,0x08,0x18,0x18,
0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x02,0x02,0x02,0x02,0x06,0x06,0x04,0x04,0x0C,0x0C,0x18,0x18,0x10,0x10,0x20,0x20,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xC0,0xC0,0x20,0x20,0x18,0x18,
0x07,0x07,0x07,0x07,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,
0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,
0x10,0x10,0x20,0x20,0x20,0x20,0x40,0x40,0xC0,0xC0,0x80,0x80,0x80,0x80,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x02,0x02,
0x60,0x60,0x40,0x40,0x40,0x40,0xC0,0xC0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x0C,0x0C,0x02,0x02,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x60,0x60,0x18,0x18,0x04,0x04,0x03,0x03,
0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,
0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,
0x02,0x02,0x06,0x06,0x0C,0x0C,0x08,0x08,0x18,0x18,0x30,0x30,0x20,0x20,0x40,0x40,
0x02,0x02,0x06,0x06,0x0C,0x0C,0x08,0x08,0x18,0x18,0x10,0x10,0x10,0x10,0x20,0x20,
0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x80,0x60,0x60,0x30,0x30,0x18,0x18,0x0E,0x0E,0x01,0x01,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xC0,0xC0,0x60,0x60,
0x1F,0x1F,0x1F,0x1F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,
0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,
0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x02,0x02,0x02,0x02,0x04,0x04,
0x40,0x40,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x40,0x40,0x40,0x40,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x1C,0x1C,0x06,0x06,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0xC0,0xC0,0x70,0x70,0x1C,0x1C,0x07,0x07,0x01,0x01,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0x60,0x60,
0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x1F,0x1F,0x1F,0x1F,
0x08,0x08,0x10,0x10,0x10,0x10,0x10,0x10,0x20,0x20,0x20,0x20,0x40,0x40,0x40,0x40,
0x0C,0x0C,0x08,0x08,0x10,0x10,0x10,0x10,0x30,0x30,0x60,0x60,0x40,0x40,0x40,0x40,
0x00,0x00,0x01,0x01,0x01,0x01,0x03,0x03,0x02,0x02,0x04,0x04,0x04,0x04,0x08,0x08,
0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x01,0x01,0x01,0x01,0x01,0x01,0x02,0x02,0x04,0x04,0x04,0x04,0x08,0x08,0x10,0x10,
0x00,0x00,0x00,0x00,0x0E,0x0E,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x40,0x40,0x30,0x30,0x08,0x08,
0x1F,0x1F,0x1F,0x1F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,
0x08,0x08,0x10,0x10,0x20,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x02,0x02,
0x10,0x10,0x20,0x20,0x60,0x60,0x40,0x40,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,
0x0E,0x0E,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x80,0x80,0x60,0x60,0x38,0x38,0x0C,0x0C,0x07,0x07,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xE0,0xE0,0x30,0x30,
0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x03,0x03,0x03,0x03,0x03,0x03,
0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xE0,0xE0,0xE0,0xE0,
0x02,0x02,0x04,0x04,0x08,0x08,0x18,0x18,0x10,0x10,0x20,0x20,0x40,0x40,0x40,0x40,
0x18,0x18,0x06,0x06,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x80,0x80,0xC0,0xC0,0x20,0x20,0x1C,0x1C,0x06,0x06,0x03,0x03,
0x03,0x03,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x02,0x02,0x02,0x04,0x04,0x08,0x08,0x08,0x08,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0x78,0x78,0x07,0x07,
0xC0,0xC0,0x60,0x60,0x30,0x30,0x08,0x08,0x0E,0x0E,0x03,0x03,0x01,0x01,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,
0x10,0x10,0x20,0x20,0x20,0x20,0x40,0x40,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0xC0,0xC0,0x40,0x40,0x60,0x60,0x30,0x30,0x0C,0x0C,0x02,0x02,0x03,0x03,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xE0,0xE0,
0x18,0x18,0x0E,0x0E,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x80,0x80,0xE0,0xE0,0x38,0x38,0x0E,0x0E,0x03,0x03,0x00,0x00,
0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x1F,0x1F,0x1F,0x1F,0x0F,0x0F,0x0F,0x0F,
0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0x80,0x80,
0x02,0x02,0x04,0x04,0x08,0x08,0x18,0x18,0x10,0x10,0x20,0x20,0x20,0x20,0x40,0x40,
0x38,0x38,0x0C,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x38,0x38,0x06,0x06,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x80,0x80,0xC0,0xC0,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
0x07,0x07,0x07,0x07,0x03,0x03,0x03,0x03,0x03,0x03,0x01,0x01,0x01,0x01,0x00,0x00,
0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x01,0x01,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x0F,0x0F,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x1F,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0xF0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0xFC,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xFE,0xFE,
0xFF,0xFF,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x3F,0x3F,0x3F,0x3F,0x1F,0x1F,0x1F,0x1F,
0xFF,0xFF,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFC,0xFC,0xFD,0xFD,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x1F,0x1F,0x7F,0x7F,0xFF,0xFF,
0x00,0x00,0x03,0x03,0x0F,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x80,0x80,0xF8,0xF8,0xFE,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xFC,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x0F,0x0F,0x0F,0x0F,0x07,0x07,0x07,0x07,0x03,0x03,0x01,0x01,0xE1,0xE1,0xF8,0xF8};









#include <gb/gb.h>

#include 
#include 

void main() {



    set_bkg_data(0, 131, tiledata);

    VBK_REG = 1;
    VBK_REG = 0;











    set_bkg_tiles(0, 0, 20, 18, tilemap);

    SHOW_BKG;

    DISPLAY_ON;
}




## big_sprite










#include <gb/gb.h>



#include 

void main() {


    SPRITES_8x16;









    set_sprite_data(0, 4, sprite);


    set_sprite_tile(0, 0);

    move_sprite(0, 75, 75);








    set_sprite_tile(1, 2);



    move_sprite(1, 75 + 8, 75);


    SHOW_SPRITES;
}





unsigned char sprite[] =
{
  0xFF,0xFF,0x80,0x80,0x80,0x80,0x81,0x81,
  0x83,0x83,0x87,0x87,0x81,0x81,0x81,0x81,
  0x81,0x81,0x81,0x81,0x81,0x81,0x81,0x81,
  0x83,0x83,0x87,0x87,0x80,0x80,0xFF,0xFF,
  0xFF,0xFF,0x01,0x01,0xC1,0xC1,0xC1,0xC1,
  0xC1,0xC1,0xC1,0xC1,0xC1,0xC1,0xC1,0xC1,
  0xC1,0xC1,0xC1,0xC1,0xC1,0xC1,0xC1,0xC1,
  0xE1,0xE1,0xF1,0xF1,0x01,0x01,0xFF,0xFF
};






## drawing

#include <gb/gb.h>
#include <gb/drawing.h>

UINT8 x = 1, y = 1, i = 3, j, f;

void main() {
	color(BLACK, WHITE, SOLID); 
	circle(100, 60, 30, M_FILL); 
	line(40, 40, 50, 50); 
	box(120, 125, 125, 135, M_NOFILL); 
	plot_point(3, 4); 
	gotogxy(18, 15); 
	gprintf(); 

	while (1) {
		if (joypad() == J_UP && y != 0)
			y--;
		if (joypad() == J_DOWN && y != 143)
			y++;
		if (joypad() == J_LEFT && x != 0)
			x--;
		if (joypad() == J_RIGHT && x != 159)
			x++;
		if (joypad() == J_A) { 
			waitpadup();
			i++;
			if (i > 3)
				i = 0;
		}
		if (joypad() == J_B) { 
			for (j = 0; j < 20; j++) { 
				for (f = 0; f < 18; f++) { 
					gotogxy(j, f);
					wrtchr(); 
				}
			}
		}
		plot(x, y, i, SOLID); 
		delay(10);
	}
}



## hello_world









#include <gb/gb.h>


#include <stdio.h>


void main() {



    printf();


    printf();
}





## color

 

unsigned const char tiledata[] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xDF,0xDF,0xC1,0xC1,0xC0,0xC0,0xC0,0xC0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x3F,0x0F,0x0F,0x01,0x01,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x1F,0x1F,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFE,0xF8,0xF8,
0xFE,0xFE,0xFC,0xFC,0xF8,0xF8,0xF0,0xF0,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x03,0x03,0x07,0x07,0x07,0x07,0x0F,0x0F,
0xE0,0xE0,0xE0,0xE0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF8,0xF8,0xF8,0xF8,0xF8,0xF8,
0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x07,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x0F,0x0F,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x0F,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0xF8,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0xE0,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFC,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,
0xE0,0xE0,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,
0x0F,0x0F,0x1F,0x1F,0x3F,0x3F,0x3F,0x3F,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF8,0xF8,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFE,0xFE,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x40,0xC0,0xC0,0x80,0x80,
0xFF,0xFF,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x0C,0x0C,0x18,0x18,
0x01,0x01,0x03,0x03,0x07,0x07,0x07,0x07,0x0F,0x0F,0x0F,0x0F,0x1F,0x1F,0x1F,0x1F,
0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x02,0x02,0x06,0x06,0x0C,0x0C,0x08,0x08,0x18,0x18,0x30,0x30,0x20,0x20,0x20,0x20,
0x0C,0x0C,0x18,0x18,0x10,0x10,0x20,0x20,0x60,0x60,0x40,0x40,0xC0,0xC0,0x80,0x80,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x03,0x03,0x02,0x02,0x04,0x04,
0x30,0x30,0x20,0x20,0x60,0x60,0xC0,0xC0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x7F,0x7F,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x02,0x02,0x02,0x06,0x06,
0x40,0x40,0xC0,0xC0,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x01,0x01,0x02,0x02,0x06,0x06,0x08,0x08,0x18,0x18,0x30,0x30,0x60,0x60,0x40,0x40,
0x08,0x08,0x18,0x18,0x30,0x30,0x60,0x60,0x40,0x40,0xC0,0xC0,0x80,0x80,0x00,0x00,
0x00,0x00,0x01,0x01,0x01,0x01,0x03,0x03,0x03,0x03,0x03,0x03,0x07,0x07,0x07,0x07,
0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,
0x04,0x04,0x08,0x08,0x08,0x08,0x10,0x10,0x30,0x30,0x20,0x20,0x00,0x00,0x00,0x00,
0x00,0x00,0x01,0x01,0x03,0x03,0x02,0x02,0x06,0x06,0x04,0x04,0x08,0x08,0x18,0x18,
0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x02,0x02,0x02,0x02,0x06,0x06,0x04,0x04,0x0C,0x0C,0x18,0x18,0x10,0x10,0x20,0x20,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xC0,0xC0,0x20,0x20,0x18,0x18,
0x07,0x07,0x07,0x07,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,
0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,
0x10,0x10,0x20,0x20,0x20,0x20,0x40,0x40,0xC0,0xC0,0x80,0x80,0x80,0x80,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x02,0x02,
0x60,0x60,0x40,0x40,0x40,0x40,0xC0,0xC0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x0C,0x0C,0x02,0x02,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x60,0x60,0x18,0x18,0x04,0x04,0x03,0x03,
0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,
0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,
0x02,0x02,0x06,0x06,0x0C,0x0C,0x08,0x08,0x18,0x18,0x30,0x30,0x20,0x20,0x40,0x40,
0x02,0x02,0x06,0x06,0x0C,0x0C,0x08,0x08,0x18,0x18,0x10,0x10,0x10,0x10,0x20,0x20,
0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x80,0x60,0x60,0x30,0x30,0x18,0x18,0x0E,0x0E,0x01,0x01,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xC0,0xC0,0x60,0x60,
0x1F,0x1F,0x1F,0x1F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,
0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,
0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x02,0x02,0x02,0x02,0x04,0x04,
0x40,0x40,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x40,0x40,0x40,0x40,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x1C,0x1C,0x06,0x06,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0xC0,0xC0,0x70,0x70,0x1C,0x1C,0x07,0x07,0x01,0x01,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0x60,0x60,
0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x1F,0x1F,0x1F,0x1F,
0x08,0x08,0x10,0x10,0x10,0x10,0x10,0x10,0x20,0x20,0x20,0x20,0x40,0x40,0x40,0x40,
0x0C,0x0C,0x08,0x08,0x10,0x10,0x10,0x10,0x30,0x30,0x60,0x60,0x40,0x40,0x40,0x40,
0x00,0x00,0x01,0x01,0x01,0x01,0x03,0x03,0x02,0x02,0x04,0x04,0x04,0x04,0x08,0x08,
0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x01,0x01,0x01,0x01,0x01,0x01,0x02,0x02,0x04,0x04,0x04,0x04,0x08,0x08,0x10,0x10,
0x00,0x00,0x00,0x00,0x0E,0x0E,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x40,0x40,0x30,0x30,0x08,0x08,
0x1F,0x1F,0x1F,0x1F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,
0x08,0x08,0x10,0x10,0x20,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x02,0x02,
0x10,0x10,0x20,0x20,0x60,0x60,0x40,0x40,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,
0x0E,0x0E,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x80,0x80,0x60,0x60,0x38,0x38,0x0C,0x0C,0x07,0x07,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xE0,0xE0,0x30,0x30,
0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x03,0x03,0x03,0x03,0x03,0x03,
0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xE0,0xE0,0xE0,0xE0,
0x02,0x02,0x04,0x04,0x08,0x08,0x18,0x18,0x10,0x10,0x20,0x20,0x40,0x40,0x40,0x40,
0x18,0x18,0x06,0x06,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x80,0x80,0xC0,0xC0,0x20,0x20,0x1C,0x1C,0x06,0x06,0x03,0x03,
0x03,0x03,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x02,0x02,0x02,0x04,0x04,0x08,0x08,0x08,0x08,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0x78,0x78,0x07,0x07,
0xC0,0xC0,0x60,0x60,0x30,0x30,0x08,0x08,0x0E,0x0E,0x03,0x03,0x01,0x01,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,
0x10,0x10,0x20,0x20,0x20,0x20,0x40,0x40,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0xC0,0xC0,0x40,0x40,0x60,0x60,0x30,0x30,0x0C,0x0C,0x02,0x02,0x03,0x03,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xE0,0xE0,
0x18,0x18,0x0E,0x0E,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x80,0x80,0xE0,0xE0,0x38,0x38,0x0E,0x0E,0x03,0x03,0x00,0x00,
0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x1F,0x1F,0x1F,0x1F,0x0F,0x0F,0x0F,0x0F,
0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0x80,0x80,
0x02,0x02,0x04,0x04,0x08,0x08,0x18,0x18,0x10,0x10,0x20,0x20,0x20,0x20,0x40,0x40,
0x38,0x38,0x0C,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x38,0x38,0x06,0x06,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x80,0x80,0xC0,0xC0,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
0x07,0x07,0x07,0x07,0x03,0x03,0x03,0x03,0x03,0x03,0x01,0x01,0x01,0x01,0x00,0x00,
0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x01,0x01,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x0F,0x0F,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x1F,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0xF0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0xFC,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xFE,0xFE,
0xFF,0xFF,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x3F,0x3F,0x3F,0x3F,0x1F,0x1F,0x1F,0x1F,
0xFF,0xFF,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFC,0xFC,0xFD,0xFD,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x1F,0x1F,0x7F,0x7F,0xFF,0xFF,
0x00,0x00,0x03,0x03,0x0F,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x80,0x80,0xF8,0xF8,0xFE,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xFC,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x0F,0x0F,0x0F,0x0F,0x07,0x07,0x07,0x07,0x03,0x03,0x01,0x01,0xE1,0xE1,0xF8,0xF8};


#include <gb/gb.h>
#include <gb/cgb.h> 


#include 
#include 


const unsigned char sprite[] =
{
	  0x7E,0x7E,0x99,0x99,0x81,0x81,0xA5,0xA5,
	  0x81,0x81,0xDB,0xDB,0xC3,0xC3,0x3C,0x3C
};



UWORD bkgPalette[] = {
	RGB_PURPLE, RGB_BLACK, RGB_ORANGE, RGB_BROWN
};

UWORD sprPalette[] = {
	RGB_GREEN, RGB_BLUE, RGB_RED, RGB_YELLOW
};

void main(void){

	set_bkg_palette(0, 1, bkgPalette); 
	set_bkg_data(0, 131, tiledata);
	set_bkg_tiles(0, 0, 20, 18, tilemap);
	SHOW_BKG;

	set_sprite_palette(0, 1, sprPalette); 
	set_sprite_data(0, 1, sprite);
	set_sprite_tile(0, 0);
	move_sprite(0, 50, 50);
	SHOW_SPRITES;

	DISPLAY_ON;
}



## big_sprite_animation

#include <gb/gb.h>
#include 

void main() {
    SPRITES_8x16;
    set_sprite_data(0, 8, cards);
    set_sprite_tile(0, 0);
    move_sprite(0, 75, 75);
    set_sprite_tile(1, 2);
    move_sprite(1, 75 + 8, 75);
    SHOW_SPRITES;

    while(1) {
        set_sprite_tile(0, 4);
        set_sprite_tile(1, 6);
        delay(500);
        set_sprite_tile(0, 0);
        set_sprite_tile(1, 2);
        delay(500);
    }
}





unsigned char cards[] =
{
  0xFF,0xFF,0x80,0x80,0x80,0x80,0x81,0x81,
  0x83,0x83,0x87,0x87,0x81,0x81,0x81,0x81,
  0x81,0x81,0x81,0x81,0x81,0x81,0x81,0x81,
  0x83,0x83,0x87,0x87,0x80,0x80,0xFF,0xFF,
  0xFF,0xFF,0x01,0x01,0xC1,0xC1,0xC1,0xC1,
  0xC1,0xC1,0xC1,0xC1,0xC1,0xC1,0xC1,0xC1,
  0xC1,0xC1,0xC1,0xC1,0xC1,0xC1,0xC1,0xC1,
  0xE1,0xE1,0xF1,0xF1,0x01,0x01,0xFF,0xFF,
  0xFF,0xFF,0x80,0x80,0x83,0x83,0x87,0x87,
  0x8E,0x8E,0x8C,0x8C,0x80,0x80,0x80,0x80,
  0x80,0x80,0x80,0x80,0x81,0x81,0x83,0x83,
  0x87,0x87,0x8F,0x8F,0x80,0x80,0xFF,0xFF,
  0xFF,0xFF,0x01,0x01,0xC1,0xC1,0xE1,0xE1,
  0x71,0x71,0x31,0x31,0x31,0x31,0x31,0x31,
  0x71,0x71,0xE1,0xE1,0xC1,0xC1,0x81,0x81,
  0xF1,0xF1,0xF1,0xF1,0x01,0x01,0xFF,0xFF
};






## docs



## res



## huge_sprite








#include <gb/gb.h>
#include <types.h>

#include 
#include 

#define SPR_WIDTH 8
#define SPR_HEIGHT 5
#define TOTAL_SPR SPR_WIDTH * SPR_HEIGHT

UINT8 x = 64;
UINT8 y = 96;

void render_huge_sprite() {
	UINT8 i, j;
	UINT8 sprite_index;

	set_sprite_tile(0, 1);

	for(i = 0; i < SPR_WIDTH; ++i) {
		for(j = 0; j < SPR_HEIGHT; ++j) {
			sprite_index = i * SPR_HEIGHT + j;
			set_sprite_tile(sprite_index, sprite_index);
			move_sprite(sprite_index, x + (j * 8), y + (i * 8));
		}
	}
}

void load_background() {
	set_bkg_data(0, 2, bg_tile_data);
	set_bkg_tiles(0, 0, 20, 18, bg_map_data); 
}

void move_huge_sprite(UINT8 nx, UINT8 ny) {
	UINT8 i, lx, ly;
	lx = 0;
	ly = 0;
	for(i = 0; i < 40; i++) {
		if(lx == 40) {
			lx = 0;
			ly += 8;
		}
		move_sprite(i, nx + lx, ny + ly);
		lx += 8;
	}	

}

void move_right() {
	move_huge_sprite(++x, y);
}

void move_left() {
	move_huge_sprite(--x, y);
}

void main() {
	SPRITES_8x8;
	set_sprite_data(0, 40, sprite_tile_data);

	render_huge_sprite();
	load_background();

	SHOW_SPRITES;
	SHOW_BKG;

	while(1) {
		wait_vbl_done();
		if(joypad() & J_RIGHT) {
			move_right();
		}
		if(joypad() & J_LEFT) {
			move_left();
		}
		delay(10);
	}
}




## save_ram

#include <stdio.h>
#include <gb/gb.h>

char *saved = (char *)0xa000; 
int *num = (int *)0xa001;

void main()

{
	ENABLE_RAM_MBC1; 

	if (saved[0] != ) { 
		num[0]=0; 
		saved[0] = ; 
	}

	printf(, num[0]);

	num[0]++; 

	DISABLE_RAM_MBC1; 
}




## blank











void main() {

}




## link

#include <stdio.h>
#include <gb/gb.h>

void main(void) {
	printf();
	_io_out = 1;
	while (1) {
		if (joypad() == J_A) {
			waitpadup();
			send_byte(); 
			printf();
			while (_io_status == IO_SENDING); 
			if (_io_status == IO_IDLE) 
				printf(, (int)_io_out);
			else
				printf(); 
			_io_out++;
		}
		if (joypad() == J_B) {
			waitpadup();
			receive_byte(); 
			printf();
			while (_io_status == IO_RECEIVING); 
			if (_io_status == IO_IDLE) 
				printf(, (int)_io_in);
			else
				printf(); 
		}
	}
}



## window




const unsigned char border[] =
{
  0x00,0x00,0x1F,0x1F,0x20,0x20,0x4F,0x4F,
  0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x50,
  0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x50,
  0x4F,0x4F,0x20,0x20,0x1F,0x1F,0x00,0x00,
  0x00,0x00,0xF8,0xF8,0x04,0x04,0xF2,0xF2,
  0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,
  0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,
  0xF2,0xF2,0x04,0x04,0xF8,0xF8,0x00,0x00,
  0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,
  0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x50,
  0x50,0x50,0x50,0x50,0x50,0x50,0x50,0x50,
  0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,
  0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};




#include <gb/gb.h>

#include 
#include 
#include 
#include 

void main() {
    set_bkg_data(0, 152, bg_tiledata);
    set_bkg_tiles(0, 0, 20, 18, bg_tilemap);
    
    SHOW_BKG;
    
    set_win_data(152, 9, border);
    set_win_tiles(0, 0, 20, 4, window);
    move_win(7, 112);

    SHOW_WIN;
}

 

const unsigned char bg_tiledata[] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFC,0xFF,0xFE,0xFF,0xFC,0xFF,0xFE,0xFF,0xFC,0xFF,0xFE,0xFF,0xFC,0xFF,0xFE,0xFF,
0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,
0x3E,0xFF,0x3E,0xFF,0x3E,0xFF,0x3E,0xFF,0x3E,0xFF,0x3F,0xFF,0x1F,0xFF,0x3F,0xFF,
0x3F,0xFF,0x7F,0xFF,0x7F,0xFF,0xFD,0xFF,0xFA,0xFF,0xF9,0xFF,0xD4,0xFF,0xAA,0xFF,
0x00,0xFF,0x80,0xFF,0x00,0xFF,0x80,0xFF,0x80,0xFF,0x20,0xFF,0x40,0xFF,0x20,0xFF,
0x00,0xFF,0x00,0xFF,0x02,0xFF,0x00,0xFF,0x23,0xFF,0x01,0xFF,0x20,0xFF,0x15,0xFF,
0x80,0xFF,0x00,0xFF,0x81,0xFF,0x81,0xFF,0x04,0xFF,0x84,0xFF,0x88,0xFF,0x40,0xFF,
0x9E,0xFF,0x82,0xFF,0x3B,0xFE,0x12,0xFF,0x00,0xFF,0x04,0xFB,0x00,0xFF,0x40,0xFF,
0xFC,0x03,0xED,0x12,0xBC,0x43,0xEE,0x11,0x38,0xC7,0x0E,0xF1,0x01,0xFE,0x00,0xFF,
0x4A,0xB5,0x55,0xAA,0x2A,0xD5,0xAA,0x55,0x95,0x6A,0xCA,0xB5,0x2A,0xD5,0xAA,0x55,
0xB6,0x49,0x5B,0xA4,0xD5,0x2A,0xAF,0x50,0x4B,0xB4,0xAA,0x55,0xB7,0x58,0xA1,0x5E,
0x1F,0xE0,0xCD,0x32,0x5F,0xA0,0xED,0x12,0xBF,0x40,0x8F,0x70,0x16,0xE9,0xD7,0x28,
0xFF,0x00,0xF7,0x08,0xBE,0x41,0xFF,0x00,0xDF,0x20,0xED,0x12,0xFF,0x00,0xFF,0x00,
0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,
0x78,0xFF,0xB8,0xFF,0x78,0xFF,0x78,0xFF,0x58,0xFF,0x58,0xFF,0x78,0xFF,0x58,0xFF,
0xFC,0xFF,0xFE,0xFF,0xFC,0xFF,0xFC,0xFF,0xFE,0xFF,0xFE,0xFF,0xFA,0xFF,0xFE,0xFF,
0x3F,0xFF,0x1F,0xFF,0x3F,0xFF,0x1F,0xFF,0x3F,0xFF,0x1E,0xFF,0x1E,0xFF,0x1F,0xFF,
0xD4,0xFF,0xC4,0xFF,0x90,0xFF,0x04,0xFF,0x08,0xFF,0x08,0xFF,0x00,0xFF,0x08,0xFF,
0x01,0xFF,0x00,0xFF,0x01,0xFF,0x08,0xFF,0x01,0xFF,0x00,0xFF,0x02,0xFF,0x00,0xFF,
0x20,0xFF,0xD0,0xFF,0x40,0xFF,0x48,0xF7,0x82,0xFF,0x88,0xF7,0x80,0xFF,0x0A,0xF7,
0x00,0xFF,0x80,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x04,0xFB,0x01,0xFE,0x00,0xFF,
0x01,0xFE,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x02,0xFD,0x40,0xBF,0x20,0xDF,0x10,0xEF,
0x55,0xAA,0x55,0xAA,0xAD,0x5A,0x2A,0xD5,0x2A,0xD5,0x2D,0xD6,0x15,0xEA,0x15,0xEE,
0x57,0xA8,0x48,0xB7,0x35,0xCA,0x95,0x6A,0xAA,0x5D,0x33,0xDC,0x8A,0xF5,0xB2,0xFD,
0xB7,0x48,0x93,0x6C,0x6F,0xD0,0xB6,0x49,0x7B,0xC4,0x89,0x76,0xBE,0x61,0xC6,0x39,
0xDB,0x24,0xFF,0x00,0xFD,0x02,0xDF,0x20,0xF5,0x0A,0x5F,0xA0,0xD5,0x2A,0xBD,0x42,
0x78,0xFF,0x58,0xFF,0x78,0xFF,0xB8,0xFF,0x78,0xFF,0x38,0xFF,0x78,0xFF,0x28,0xFF,
0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x06,0xF9,0x02,0xFD,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,
0xFD,0xFF,0xFF,0xFF,0x6F,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,
0xEC,0xFF,0xFE,0xFF,0xCC,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,
0x1E,0xFF,0x1E,0xFF,0x1E,0xFF,0x1E,0xFF,0x1E,0xFF,0x1E,0xFF,0x1F,0xFF,0x1E,0xFF,
0x00,0xFF,0x00,0xFF,0x08,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,
0x00,0xFF,0x00,0xFF,0x80,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,
0x01,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x01,0xFF,0x00,0xFF,0x00,0xFF,
0x00,0xFF,0x84,0xFF,0x00,0xFF,0x00,0xFF,0x20,0xFF,0x00,0xFF,0x00,0xFF,0x80,0xFF,
0x00,0xFF,0x3B,0xC4,0x3C,0xC3,0x3F,0xC0,0x70,0x8F,0x7C,0x83,0x7D,0x82,0xFF,0x00,
0x10,0xEF,0x9F,0x60,0x51,0xAE,0x29,0xD6,0x60,0x9F,0x70,0x8F,0xFF,0x00,0xF7,0x08,
0x0C,0xF7,0x0B,0xF6,0x06,0xFD,0xA2,0xDD,0x0C,0xFB,0x8D,0x7B,0x42,0xFF,0x15,0xEB,
0x55,0xEA,0x78,0xFF,0x96,0xED,0xF4,0x6F,0x1B,0xFE,0xCB,0x7F,0xB5,0xFF,0xBD,0x6F,
0x15,0xEA,0xB6,0x5B,0xAA,0x55,0xA7,0x5A,0x1C,0xEB,0xA6,0x5B,0x5A,0xAD,0x8A,0x75,
0xC5,0x3A,0x25,0xDA,0xF5,0xAA,0x49,0xF6,0xB5,0xEA,0xF5,0x7E,0xBD,0xFA,0xBD,0x5E,
0x78,0xFF,0x58,0xFF,0x70,0xFF,0x58,0xFF,0x78,0xFF,0x59,0xFE,0xFB,0xFC,0x5B,0xFC,
0x03,0xFC,0x03,0xFC,0x03,0xFC,0x03,0xFC,0x03,0xFC,0xFF,0x00,0xFF,0x00,0xFF,0x00,
0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x40,0xBF,0xF0,0x0F,0xF0,0x0F,0xF0,0x0F,
0x00,0xFF,0x00,0xFF,0x1F,0xFF,0x07,0xFF,0x30,0xFF,0x2B,0xFC,0x1A,0xF5,0x15,0xFA,
0x1F,0xFF,0x1E,0xFF,0xFF,0xFF,0xFF,0xFF,0x02,0xFF,0xF5,0x0A,0x11,0xEE,0xAD,0x52,
0x00,0xFF,0x08,0xFF,0xFF,0xFF,0xFF,0xFF,0x2B,0xFF,0xA9,0x57,0x13,0xEF,0x45,0xBB,
0x00,0xFF,0x00,0xFF,0x80,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x80,0x7F,
0x04,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,
0x22,0xDD,0x80,0xFF,0x01,0xFE,0x80,0xFF,0x10,0xFF,0x09,0xFE,0x00,0xFF,0x00,0xFF,
0xFE,0x01,0xFE,0x01,0xFD,0x02,0xFF,0x00,0xFD,0x02,0xFE,0x01,0xFD,0x02,0xFF,0x00,
0xD7,0x28,0x03,0xFC,0xDA,0x25,0xE9,0x16,0x04,0xFB,0x06,0xF9,0x00,0xFF,0x1E,0xFF,
0x1A,0xF7,0x9A,0x77,0x17,0xED,0x15,0xEA,0x14,0xFF,0x87,0xFD,0x04,0xFB,0x05,0xFA,
0xF5,0xFF,0xAA,0xFF,0xB5,0x5F,0xAD,0xD7,0x92,0x7F,0x5D,0xAB,0xB2,0x5D,0x1A,0xED,
0x5B,0xAD,0x49,0xB6,0x92,0x6D,0x4B,0xB4,0xB2,0x6D,0x5D,0xA6,0xA2,0x5F,0x56,0xAB,
0x55,0xFE,0x5D,0xAE,0xEB,0xBE,0x7D,0xAE,0x17,0xFC,0xFD,0xAE,0x95,0xFE,0xDD,0xFE,
0x73,0xFC,0x5B,0xFC,0xF3,0x7C,0xBB,0xFC,0xDB,0x7C,0x5B,0xFC,0xDB,0x7C,0x5B,0xFC,
0xF0,0x0F,0xF0,0x0F,0xF0,0x0F,0xF0,0x0F,0xF0,0x0F,0xF0,0x0F,0xF0,0x0F,0xF0,0x0F,
0x00,0xFF,0xD0,0xFF,0xFF,0xFF,0xFF,0xFF,0xEA,0xFF,0x80,0xFF,0x3F,0xC0,0xBF,0xC0,
0x00,0xFF,0x02,0xFF,0xFF,0xFF,0xFF,0xFF,0x95,0xFF,0x00,0xFF,0xFF,0x00,0xFF,0x00,
0x00,0xFF,0x00,0xFF,0xF0,0xFF,0xF8,0xFF,0x30,0xFF,0x10,0xFF,0x98,0x7F,0xB0,0x5F,
0x1A,0xF5,0x13,0xFC,0x2A,0xF5,0x1A,0xF5,0x0E,0xF9,0x12,0xFD,0x26,0xF9,0x3A,0xFD,
0xA2,0x5D,0x48,0xB7,0xB5,0x4E,0xA9,0x56,0x94,0x6B,0xAB,0x55,0x8A,0x7F,0xAB,0x57,
0x21,0xDF,0xA9,0x57,0x0B,0xF5,0x40,0xBF,0x56,0xEB,0x11,0xFF,0xCB,0x75,0x50,0xFF,
0x00,0xFF,0x80,0xFF,0x80,0x7F,0x80,0xFF,0x00,0xFF,0x80,0xFF,0x00,0xFF,0x80,0xFF,
0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x1F,0xFF,0x3B,0xC7,
0x80,0xFF,0x01,0xFE,0x03,0xFC,0x87,0xF8,0xBF,0xC0,0xBF,0xC0,0xBF,0xC0,0xDF,0xE0,
0xBF,0x7F,0xBF,0x7F,0xBF,0x7F,0x3F,0xFF,0x6D,0x97,0x6F,0x97,0xDE,0x27,0xF7,0x08,
0x35,0xEA,0x05,0xFA,0x39,0xEF,0x8C,0x7B,0x6A,0xD5,0x17,0xED,0xA8,0x57,0xCF,0x35,
0x4A,0xB5,0x3B,0xD5,0x92,0x6D,0xAA,0x55,0x6A,0xB5,0x52,0xBD,0x2B,0xD5,0x42,0xFD,
0x95,0x6F,0x56,0xAB,0xAB,0x5F,0x9D,0x6B,0xA7,0x5B,0x35,0xEF,0xDF,0x6B,0x8D,0x7B,
0xB5,0xFE,0xDF,0xFE,0x75,0xFE,0xBF,0xFE,0xF5,0xFE,0x7D,0xBE,0x6D,0xFA,0x7B,0xDC,
0x7B,0xFC,0x9B,0xFC,0x7B,0xFC,0x5B,0xFC,0x7B,0xFC,0x5B,0xFC,0x7B,0xFC,0x5B,0xFC,
0xE0,0x1F,0xE0,0x1F,0xF0,0x0F,0xF0,0x0F,0xF0,0x0F,0xF0,0x0F,0xF0,0x0F,0xF0,0x0F,
0xBF,0xC0,0xBF,0xC0,0xBE,0xC1,0x8F,0xF0,0xB5,0xCA,0xAA,0xD5,0xAA,0xD5,0xAA,0xD7,
0x7F,0x80,0xBF,0xC0,0x9F,0xE0,0xEF,0xB0,0x37,0xD8,0x27,0xD8,0xAF,0x50,0xAF,0xD0,
0xA8,0x5F,0x88,0x7F,0xD0,0x3F,0xA8,0x5F,0xB8,0x5F,0xC8,0x3F,0xB8,0x5F,0x88,0x7F,
0x0A,0xF5,0x2B,0xFC,0x12,0xFD,0x1B,0xFC,0x12,0xFD,0x2B,0xFC,0x12,0xFD,0x2B,0xFC,
0x45,0xFF,0x26,0xFD,0xA9,0xDE,0xA5,0xDF,0x4D,0xBE,0x54,0xEF,0x55,0xFF,0x4E,0xBB,
0x2B,0xF5,0xB2,0xFD,0xA9,0xF7,0x7B,0xF5,0x81,0xFF,0xFA,0x75,0x51,0xFF,0xBA,0xF5,
0x00,0xFF,0x80,0xFF,0x01,0xFE,0x81,0xFE,0x03,0xFC,0x83,0xFC,0x83,0xFC,0x83,0xFC,
0xFF,0x03,0xFD,0x03,0x7E,0x81,0x5E,0xA1,0xFF,0x00,0xBC,0x43,0x79,0x86,0xFD,0x02,
0xEF,0xF0,0xF7,0xF8,0xFF,0xF8,0xFB,0xFC,0xF9,0x7E,0x3D,0xFE,0x7F,0xBE,0x3E,0xFF,
0x61,0x9F,0x15,0xFB,0xF1,0x1E,0xFC,0x1F,0xF5,0x1A,0xED,0x1E,0xDA,0x3D,0xFC,0x1F,
0xA8,0x57,0x6D,0xDA,0x49,0xBF,0xD6,0xAD,0x34,0xEF,0x57,0xAD,0xC8,0x77,0xDE,0x75,
0x5B,0xEF,0x57,0xED,0x1F,0xFB,0xA5,0xDF,0x1D,0xFA,0xD6,0x6D,0x5A,0xB5,0xDF,0xAA,
0x69,0xF6,0x75,0xDA,0x93,0xEC,0xDB,0x74,0x55,0xAA,0x77,0xA8,0xAB,0x54,0x6F,0xB0,
0x7B,0xFC,0x9B,0xFC,0x7B,0xFC,0x58,0xFF,0xD8,0xFF,0x70,0xFF,0xB8,0xFF,0xD8,0xFF,
0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,
0xF0,0x0F,0xF0,0x0F,0xC0,0x3F,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,
0x97,0xEC,0xA2,0xDF,0x94,0xEF,0xAB,0xD4,0x9A,0xEF,0xAA,0xD7,0x9A,0xED,0xD6,0xEF,
0x57,0xA8,0xA7,0x58,0x7B,0xAC,0x23,0xFC,0xFB,0x74,0x51,0xFE,0xAB,0x54,0x89,0x76,
0xC8,0x3F,0xC8,0x3F,0x98,0x7F,0xC8,0x3F,0xA8,0x5F,0xC8,0x3F,0x98,0x7F,0xE8,0x1F,
0x12,0xFD,0x2B,0xFC,0x12,0xFD,0x1B,0xFC,0x15,0xFA,0x39,0xFE,0x16,0xF9,0x1B,0xFC,
0x31,0xEF,0xD5,0x3A,0xA8,0x57,0x4B,0xB4,0xF4,0x0B,0x55,0xAA,0xB5,0x4A,0xDA,0x25,
0xA1,0xFF,0xBB,0xF5,0xA0,0xFF,0x4A,0xB5,0xAB,0x55,0x50,0xAF,0x53,0xAD,0xA8,0x57,
0x07,0xF8,0x83,0xFC,0x86,0xF9,0x83,0xFC,0x85,0xFA,0x87,0xF8,0x83,0xFC,0x85,0xFA,
0x72,0x8D,0xF2,0x0D,0xF8,0x07,0xD4,0x2B,0xEF,0x19,0xF6,0x09,0xFF,0x00,0xFD,0x02,
0x3F,0xFF,0xBF,0x7F,0x9F,0x7F,0x3F,0xFF,0xDF,0x7F,0xDF,0x7F,0x8F,0xFF,0xAF,0x7F,
0x7F,0x80,0x7F,0x80,0xBF,0xC0,0xBF,0xC0,0xDF,0xE0,0x6F,0xF0,0xE7,0xF8,0x7F,0xF8,
0xFF,0x00,0xFE,0x01,0xFD,0x02,0xFD,0x02,0xFA,0x05,0xF9,0x06,0xF1,0x0E,0xF3,0x0C,
0xDA,0x3D,0x9D,0x7E,0x7F,0xBC,0x7D,0xBE,0x7D,0xBE,0x5D,0xFE,0x6F,0xFC,0xE9,0x7E,
0xA2,0x5F,0xFF,0x03,0x7A,0x85,0xFD,0x02,0xFF,0x00,0xFF,0x00,0x7F,0x80,0xFF,0x00,
0x54,0xEB,0xFF,0x00,0xFF,0x80,0x7F,0x80,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,
0x78,0xFF,0x58,0xFF,0xF0,0xFF,0x38,0xFF,0xF8,0xFF,0x38,0xFF,0xF8,0xFF,0x98,0xFF,
0x93,0xEE,0xEE,0xD3,0x8B,0xF4,0xD0,0xEF,0xAA,0xD5,0xCA,0xF5,0x92,0xED,0x8A,0xF5,
0x65,0xDA,0x35,0xFA,0xAB,0x74,0xD5,0x2A,0x55,0xAA,0x94,0x6B,0xAA,0x55,0x95,0x6A,
0x88,0x7F,0xC8,0x3F,0xC8,0x3F,0x48,0xBF,0x88,0x7F,0xE8,0x1F,0x88,0x7F,0x48,0xBF,
0x12,0xFD,0x12,0xFD,0x1B,0xFC,0x0B,0xFF,0x2F,0xFF,0x16,0xFF,0x00,0xFF,0x00,0xFF,
0xAA,0x55,0xEA,0x15,0x10,0xEF,0x7F,0xFF,0xFF,0xFF,0xBA,0xFF,0x00,0xFF,0x00,0xFF,
0x52,0xAD,0xAA,0x55,0x57,0xFF,0xFF,0xFF,0xFE,0xFF,0xA8,0xFF,0x04,0xFF,0x00,0xFF,
0x83,0xFC,0x81,0xFE,0x41,0xFE,0x83,0xFC,0x83,0xFC,0x01,0xFE,0x01,0xFE,0x01,0xFE,
0x4F,0xBF,0xC7,0x3E,0xCF,0x3F,0xE6,0x1F,0xD7,0x2F,0xD6,0x2F,0xE7,0x1F,0xA6,0x5F,
0xD7,0xF8,0xFF,0xF0,0xEF,0xB0,0xEF,0xF0,0x7F,0xD0,0xBF,0xC8,0x7F,0x82,0xFF,0x00,
0xE7,0x18,0xE1,0x1F,0xEF,0x1F,0xAD,0x5F,0xD7,0x3F,0x9B,0x7F,0x3F,0xFB,0x3F,0xFF,
0x7F,0xFC,0xD9,0xFE,0xFB,0xEC,0xF9,0xFE,0xBA,0xED,0xE9,0xFE,0xF5,0x7E,0xF9,0xFE,
0x7F,0x80,0xFF,0x00,0x4A,0xB5,0xFF,0x3F,0xBF,0x7F,0xFF,0x3F,0x7F,0xBF,0x80,0x7F,
0xFF,0x00,0xFF,0x00,0x5F,0xA0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,
0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x10,0xFF,
0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFB,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAD,0xFF,
0x70,0xFF,0xF8,0xFF,0xB8,0xFF,0xF8,0xFF,0xD8,0xFF,0xF0,0xFF,0xF8,0xFF,0x50,0xFF,
0x00,0xFF,0x00,0xFF,0x04,0xFF,0x00,0xFF,0x04,0xFF,0x00,0xFF,0x2A,0xFF,0x00,0xFF,
0xB2,0xDD,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,
0x44,0xBB,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x6A,0xFF,0x01,0xFF,
0x18,0xFF,0x18,0xFF,0xF8,0xFF,0xF8,0xFF,0xF8,0xFF,0xC0,0xFF,0x00,0xFF,0x00,0xFF,
0x08,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,
0xFF,0x00,0xFF,0x00,0xFF,0x00,0x3F,0xC0,0x7F,0x80,0x7F,0x80,0x3F,0xC0,0x3F,0xC0,
0xD5,0x2E,0xC3,0x3C,0x87,0x78,0x9F,0x60,0x7F,0x80,0x7F,0x80,0xFF,0x00,0xFF,0x00,
0xF8,0x07,0xFF,0x00,0xFA,0x05,0xFF,0x01,0xE9,0x17,0xFD,0x03,0xAB,0x57,0xDB,0x27,
0xFF,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xBD,0xFE,0xF5,0xFE,0xFD,0xBE,0xFD,0xFE,0xFC,0xFF,0xFD,0xFE,0xF9,0xFE,0xF0,0xFF,
0x40,0xBF,0x40,0xBF,0x80,0x7F,0x80,0x7F,0xC0,0x3F,0x40,0xBF,0x80,0x7F,0xC2,0x3F,
0x10,0xFF,0x14,0xFF,0x80,0xFF,0x28,0xFF,0x10,0xFF,0x88,0xFF,0x00,0xFF,0x00,0xFF,
0x1F,0xE0,0x1F,0xE0,0x1F,0xE0,0x0F,0xF0,0x0E,0xF1,0x07,0xF8,0x07,0xF8,0x03,0xFC,
0xFF,0x00,0xFF,0x00,0xFE,0x01,0xFE,0x01,0xF5,0x0A,0xF5,0x0A,0xD8,0x27,0xEA,0x15,
0x6F,0x97,0xA7,0x5F,0xAF,0x5F,0x9F,0x7F,0x5F,0xBF,0x3F,0xFF,0xBF,0x7F,0x7F,0xFF,
0xF3,0xFC,0xF0,0xFF,0xE9,0xFE,0xF0,0xFF,0xE1,0xFE,0xF8,0xFF,0xF1,0xFE,0xF8,0xFF,
0x94,0x7F,0xDF,0x3F,0x9F,0x7F,0xDF,0x3F,0x5F,0xBF,0x5F,0xBF,0x7F,0x9F,0x4F,0xBF,
0x07,0xF8,0x01,0xFE,0x04,0xFF,0x06,0xFF,0x07,0xFF,0x07,0xFF,0x07,0xFF,0x03,0xFF,
0x84,0x7B,0x45,0xBB,0x13,0xEF,0x07,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,0xFF,
0xF9,0xFE,0xFC,0xFF,0xF9,0xFE,0xFE,0xFF,0xFC,0xFF,0xFF,0xFF,0xFD,0xFF,0xFD,0xFF,
0x6F,0x9F,0x2F,0xDF,0x57,0xAF,0x57,0xAF,0x17,0xEF,0x17,0xEF,0x2B,0xD7,0x8B,0xF7,
0x0F,0xFF,0x07,0xFF,0x0F,0xFF,0x07,0xFF,0x0F,0xFF,0x0F,0xFF,0x5F,0xFF,0x0F,0xF7,
0xAB,0xD7,0xCB,0xF7,0xDB,0xE7,0x4B,0xF7,0xCD,0xF3,0xC5,0xFB,0xC9,0x77,0xED,0xF3,
0x1F,0xFE,0x0F,0xFF,0x1B,0xFF,0x0F,0xFF,0x1F,0xFF,0x1F,0xFF,0x3F,0xFF,0x1F,0xEF,
0xE5,0xFB,0xF5,0xFB,0xF5,0xFB,0xF5,0xFB,0xE4,0xFB,0xF2,0xFD,0xF2,0xFD,0xF0,0xFF,
0x3F,0xFF,0x1F,0xFF,0x1F,0xFF,0x1F,0xFF,0x5F,0xFF,0x3F,0xFF,0x3F,0xFF,0x1F,0xFF,
0xF2,0xFD,0xF8,0xFF,0xF8,0xFF,0xFA,0xFD,0xF8,0xFF,0xF8,0xFF,0xF9,0xFE,0xFC,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0x7F,0xFF,0x7F,0xFF};




#define windowWidth 20
#define windowHeight 4
#define windowBank 0

const unsigned char window[] =
{
  0x98,0x9C,0x9C,0x9C,0x9C,0x9C,0x9C,0x9C,0x9C,0x9C,
  0x9C,0x9C,0x9C,0x9C,0x9C,0x9C,0x9C,0x9C,0x9C,0x9A,
  0x9E,0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,
  0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,0x9F,
  0x9E,0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,
  0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,0xA0,0x9F,
  0x99,0x9D,0x9D,0x9D,0x9D,0x9D,0x9D,0x9D,0x9D,0x9D,
  0x9D,0x9D,0x9D,0x9D,0x9D,0x9D,0x9D,0x9D,0x9D,0x9B
};






## beep

#include <gb/gb.h>
#include <gb/drawing.h>

void main() {
    NR50_REG = 0xFF;
    NR51_REG = 0xFF;
    NR52_REG = 0x80;
    
    gotogxy(1, 1);
    gprintf();
    
    gotogxy(2, 3);
    gprintf();
    
    while(1) {
        UBYTE joypad_state = joypad();
        
        if(joypad_state) {        
            NR10_REG = 0x38U;
            NR11_REG = 0x70U;
            NR12_REG = 0xE0U;
            NR13_REG = 0x0AU;
            NR14_REG = 0xC6U;

            NR51_REG |= 0x11;
            
            delay(200);
        }
    }
}





## input_wait

#include <stdio.h>
#include <gb/gb.h>

void main() {
    while(1) {
        printf();
        waitpad(J_START);

        printf();
        waitpad(J_A);
        printf();
        waitpadup();
        printf();
    }
}




## simple_shmup

#include <gb/gb.h>
#include 
#include 
#include 
#include 

const UBYTE gamemap[] = {
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
};

const UWORD bgpal[] = {
    RGB(0, 0, 0), RGB(10, 10, 10), RGB(20, 20, 20), RGB(30, 30, 30),
};
const UWORD spritepal[] = {
    RGB(0, 0, 0), RGB(10, 10, 10), RGB(20, 20, 20), RGB(30, 30, 30),
};

void draw_title_screen(void) {
    wait_vbl_done();

    DISPLAY_OFF;

    set_bkg_data(0, 255, bg_title_tiledata);
    set_bkg_tiles(0, 0, 20, 18, bg_title_tilemap);

    SHOW_BKG;

    HIDE_WIN;

    HIDE_SPRITES;

    wait_vbl_done();

    DISPLAY_ON;

    waitpad(255);
}

void load_game_tiles(void) {
    wait_vbl_done();

    DISPLAY_OFF;

    set_bkg_data(0, 1, BGTile);
    set_bkg_tiles(0, 0, 32, 32, gamemap);
    set_bkg_palette(0, 1, &bgpal[0]);
    set_sprite_data(0, 3, SpriteTiles);
    set_sprite_tile(0, 0);
    set_sprite_tile(1, 1);
    set_sprite_tile(2, 2);

    SPRITES_8x8;

    SHOW_SPRITES;

    SHOW_BKG;

    DISPLAY_ON;
}


 

const unsigned char bg_title_tiledata[] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xDF,0xDF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xDF,0xDF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x30,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,
0xFE,0xFF,0xFF,0xFC,0xF5,0xFB,0xFB,0xF7,0xE7,0xFF,0xFF,0xEF,0xDF,0xEF,0xDF,0xEF,
0xFF,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,
0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,
0x87,0x30,0xCF,0xB7,0xCF,0xB7,0xCF,0xB7,0xCF,0xB7,0xCF,0xB7,0xCF,0xB7,0x48,0xB7,
0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,
0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,
0xFE,0x00,0xFE,0xFF,0xFE,0xFF,0xFE,0xFF,0xFE,0xFF,0xFE,0xFF,0xFE,0xFF,0x01,0xFE,
0x77,0xF8,0x7B,0xF7,0x7F,0xF7,0x6F,0xF7,0x67,0xFF,0x7F,0xEF,0x7F,0xEF,0x4F,0xFF,
0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF7,0xFF,
0xFB,0x07,0xF3,0xFF,0xFF,0xFB,0xFF,0xFB,0xF9,0xFF,0xF9,0xFF,0xFF,0xFD,0xFF,0xFD,
0xFF,0xF8,0x7F,0x7B,0xFF,0xFB,0xFF,0xFB,0xFF,0xFB,0xFF,0xFB,0xFF,0xFB,0xFF,0xFB,
0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFC,0xFE,
0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFF,0xFE,0x01,
0xF7,0x0F,0xEF,0xF3,0xFB,0xFD,0xFD,0xFE,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xBF,0x7F,0x3F,0xFF,0x7F,0xBF,
0xCF,0xFF,0xDF,0xEF,0xFF,0xEF,0xF7,0xEF,0xEF,0xF7,0xF7,0xFB,0xF8,0xFF,0xFE,0xFF,
0xFF,0xFC,0xFE,0xFD,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,
0xFF,0x00,0xFF,0xFF,0x7F,0xFF,0x3F,0xFF,0xAF,0xDF,0xF7,0xEF,0xFB,0xF7,0xF7,0xFB,
0xCF,0x30,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0x03,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,
0xFF,0xFC,0xFE,0xFD,0xFE,0xFD,0xFE,0xFD,0xFE,0xFD,0xFE,0xFD,0xFE,0xFD,0xFE,0xFD,
0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x4F,0xFF,0xFF,0xDF,0xFF,0xDF,0x9F,0xFF,0xDF,0xBF,0xFF,0xBF,0xFF,0xBF,0x3F,0xFF,
0xF3,0xFF,0xFF,0xF3,0xFF,0xF3,0xE7,0xFB,0xE1,0xFF,0xFF,0xED,0xFF,0xED,0xCE,0xFD,
0xFC,0xFF,0xFD,0xFE,0xFF,0xFE,0xFF,0xFE,0xFE,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFB,0xFF,0xFB,0xFF,0xFB,0xFF,0xFB,0x7F,0xFB,0x7F,0xFB,0xFF,0x7B,0x3F,0xFB,
0xFD,0xFE,0xFD,0xFE,0xFD,0xFE,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFE,0xFF,0xFE,0x03,0xFC,0xF9,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFD,0xFE,0xFA,0xFD,
0xFF,0xBF,0xFF,0xBF,0xFF,0xBF,0x3F,0xFF,0xBF,0x7F,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFE,0xFF,0xFE,0xFF,0xFE,0xFF,0xFE,0xFF,0xFE,
0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x7F,0xBF,0xDF,0xBF,0xDF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFD,0xFB,0xFB,0xFD,0xFF,0xFD,0xFF,0xFD,0xFB,0xFD,0xFD,0xFB,0xF7,0xFB,0xEB,0xF7,
0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,
0xFE,0xFD,0xFE,0xFD,0xFE,0xFD,0xFE,0xFD,0xFE,0xFD,0xFE,0xFD,0xFE,0xFD,0xFE,0xFD,
0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFE,0xFF,0xFE,0xFF,0xFF,0xFE,0xFC,0xFF,0xFC,0xFF,
0x3F,0xFF,0xFF,0x7F,0x7F,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFE,0xC1,0xC1,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0x40,0xBF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xBF,0x7F,
0x3F,0xFB,0xFF,0xBB,0xFF,0xBB,0x9F,0xFB,0x9F,0xFB,0xFF,0xDB,0xFF,0xDB,0xCF,0xFB,
0xFF,0xFF,0xFE,0xFF,0xFD,0xFE,0xFC,0xFE,0xFD,0xFE,0xFD,0xFE,0xFD,0xFE,0xFD,0xFE,
0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xBF,0x7F,0x5F,0xBF,0xAF,0xDF,0xD7,0xEF,0xEB,0xF7,
0xED,0xF3,0xEB,0xF7,0xF7,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xDF,0xEF,0xDF,0xEF,0xDF,0xEF,0xDF,0xEF,0xDF,0xEF,
0xFF,0xFE,0xFF,0xFE,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0x7F,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFE,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xD7,0xEF,0x6F,0x9F,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF7,0xFB,0xF7,0xFB,0xF7,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFE,0xFD,0xFE,0xFD,0xFE,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFD,0xFF,0xFD,0xFB,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFE,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0x7F,0xFF,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x7F,0xBF,0xDF,0xBF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xCF,0xFB,0xDD,0xEB,0xF7,0x08,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFD,0xFE,0xFD,0xFE,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF5,0xFB,0xFD,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0x7F,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xDF,0xEF,0xDF,0xEF,0xEF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFE,0xFD,0xFD,0xFB,0xFB,0xF7,
0xFF,0xFF,0xF9,0xFE,0xDC,0xE3,0x6F,0x9F,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xEF,0x1F,0x2F,0xDF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCE,0xFF,0xCF,0xFE,
0xFF,0xFF,0xF6,0xF7,0xFB,0xFC,0xEB,0xF7,0xBF,0xCF,0x5F,0xBF,0xBF,0x7F,0x7F,0xFF,
0xFF,0xFF,0x39,0xC7,0x03,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xBF,0x7F,0x6F,0x9F,0xD7,0xEF,0xEB,0xF7,0xFD,0xFB,0xFE,0xFD,
0xFF,0xFF,0xFF,0xE0,0xF0,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,
0xFE,0xFE,0xFE,0x01,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0x7F,0xFF,0xDF,0x3F,0xF7,0xCF,0xEB,0xF7,0xF7,0xFB,0xF9,0xFF,0xFF,0xFD,
0xFF,0xFF,0xFE,0xFF,0xFB,0xFC,0xFF,0xF3,0xF7,0xEF,0xEF,0xDF,0xBF,0xDF,0xDF,0xBF,
0xFF,0xFF,0x7F,0x80,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFD,0xFD,0x7F,0xFF,0xFF,0x7F,0xFF,0x7F,0xFF,0x7F,0xFF,0x7F,0xFF,0x7F,0xFF,0x7F,
0xEF,0xF7,0xF7,0xEF,0xDF,0xEF,0xCF,0xFF,0xEF,0xDF,0xFF,0xDF,0xFF,0xDF,0xFF,0xDF,
0xFF,0xFF,0xFD,0xFE,0xF6,0xF9,0xEB,0xF7,0xF7,0xEF,0xDF,0xEF,0xCF,0xFF,0xCF,0xFF,
0xCD,0xFE,0xEF,0x1D,0x19,0xFF,0xFD,0xFB,0xFF,0xFB,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,
0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFD,0xFE,0xFF,0xFD,0xF9,0xFF,0xFD,0xFB,0xFD,0xFB,
0xFF,0xFF,0xB3,0xCF,0xC5,0x3B,0x7F,0xFC,0xFF,0xFE,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFD,0xFE,0xFF,0xFE,0xFE,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0x7F,0xFF,0x7F,0xFF,0x7F,
0xFF,0xEF,0x7F,0xEF,0xFF,0x6F,0xFF,0x6F,0xBF,0x6F,0x3F,0xEF,0x7F,0xAF,0x7F,0xAF,
0xF7,0xF8,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,0xF3,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF7,0x0F,0xEF,0xF3,0xFF,0xFB,0xF7,0xFB,0xFB,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFE,0xFD,0xFD,0xFE,0xFD,0xFE,0xFD,0xFE,0xFD,0xFE,0xFE,0xFD,0xFF,0xFD,0xFD,0xFB,
0xDF,0xBF,0xFF,0xBF,0xFF,0xBF,0xDF,0xBF,0x9F,0xFF,0xFF,0xDF,0xDF,0xEF,0xE7,0xFF,
0xFF,0xFF,0xFB,0xFC,0xF4,0xFB,0xFD,0xFB,0xFC,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xDF,0xBF,0xEF,0xDF,
0xFF,0xDF,0xEF,0xDF,0xCF,0xFF,0xDF,0xEF,0xF7,0xEF,0xEF,0xF7,0xF7,0xFB,0xFD,0xFB,
0xDF,0xEF,0xF7,0xEF,0xEB,0xF7,0xF6,0xF9,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFB,0xFF,0xFB,0xFD,0xFB,0x1B,0xFD,0x2F,0xDD,0xCD,0xFE,0xCF,0xFE,0xCF,0xFF,
0xFB,0xFD,0xFE,0xFD,0xFD,0xFE,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xBF,0x7F,
0xFE,0xFF,0xFF,0xFE,0x7F,0xFC,0xCD,0x33,0x87,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0x7F,0x7F,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFE,0xFD,0xFE,0xFA,0xFD,0xF5,0xFB,
0x3F,0xEF,0xBF,0x6F,0xFF,0x6F,0xFF,0x6F,0x7F,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0xFF,0xF4,0xFB,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,
0xF7,0xFB,0xEB,0xF7,0xBF,0xCF,0xDC,0x3F,0x7A,0xFD,0xFB,0xFD,0xFB,0xFD,0xFB,0xFD,
0xF1,0xFF,0xFC,0xFF,0xFE,0xFF,0x00,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF7,0xEF,0xEF,0xF7,0xFF,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,0xF7,0xEF,0xF7,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xDF,0xDF,0xFF,0xFF,
0xFF,0xFC,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xBF,0x7F,0x6F,0x9F,0xDC,0xE3,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0x2F,0xDF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x5F,0xBF,0xF7,0xCF,0xED,0xF3,0xFB,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x87,0x78,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xEB,0xF7,0xD7,0xEF,0x7F,0x9F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xF0,0xEF,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF7,0xFB,0xF7,0xFB,0xF7,0xFB,0x0F,0xF3,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFB,0xFD,0xFB,0xFD,0xFB,0xFD,0xFA,0xFD,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF7,0xEF,0xAF,0xDF,0x5F,0xBF,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFB,0xFB,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFC,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x01,
0xFD,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0xF0,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x1F,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFD,0xFD,0xFF,0xFF,
0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,
0x78,0x78,0x78,0x78,0x78,0x78,0x78,0x78,0x01,0x01,0x01,0x01,0x7F,0x7F,0x7F,0x7F,
0xFF,0xFF,0xFF,0xFF,0xF0,0xF0,0xF0,0xF0,0xF1,0xF1,0xF1,0xF1,0xF1,0xF1,0xF1,0xF1,
0xFF,0xFF,0xFF,0xFF,0x07,0x07,0x07,0x07,0xE3,0xE3,0xE3,0xE3,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xF0,0xF0,0xF0,0xF0,0xC7,0xC7,0xC7,0xC7,0xC0,0xC0,0xC7,0xC7,
0xFF,0xFF,0xFF,0xFF,0x1F,0x1F,0x1F,0x1F,0x8F,0x8F,0x8F,0x8F,0x0F,0x0F,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xC0,0xC0,0xC0,0xC0,0x1F,0x1F,0x1F,0x1F,0xC0,0xC0,0xFE,0xFE,
0xFF,0xFF,0xFF,0xFF,0x3F,0x3F,0x3F,0x3F,0xFC,0xFC,0xFC,0xFC,0x7F,0x7F,0x3F,0x3F,
0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x7F,0x7F,0x7F,0x7F,0x01,0x01,0xF8,0xF8,
0xC7,0xC7,0xC7,0xC7,0xC7,0xC7,0xC7,0xC7,0xF0,0xF0,0xF0,0xF0,0xFF,0xFF,0xC7,0xC7,
0x8F,0x8F,0x8F,0x8F,0xFF,0xFF,0xFF,0xFF,0x1F,0x1F,0x1F,0x1F,0x8F,0x8F,0x8F,0x8F,
0xE1,0xE1,0xE1,0xE1,0x00,0x00,0x00,0x00,0xE1,0xE1,0xE1,0xE1,0xE1,0xE1,0xE1,0xE1,
0xFF,0xFF,0xFF,0xFF,0x3F,0x3F,0x3F,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFC,
0xFF,0xFF,0xFF,0xFF,0x01,0x01,0x01,0x01,0xF8,0xF8,0xF8,0xF8,0x00,0x00,0x78,0x78,
0xF8,0xF8,0xF8,0xF8,0xC0,0xC0,0xC0,0xC0,0xF8,0xF8,0xF8,0xF8,0xF8,0xF8,0xF8,0xF8,
0x7F,0x7F,0x7F,0x7F,0x0F,0x0F,0x0F,0x0F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF1,0xF1,0xF1,0xF1,0xF1,0xF1,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xC7,0xC7,0xF0,0xF0,0xF0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0x1F,0x1F,0x1F,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFE,0xFE,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x3F,0x3F,0x7C,0x7C,0x7C,0x7C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF8,0xF8,0x01,0x01,0x01,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x8F,0x8F,0x1F,0x1F,0x1F,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xE1,0xE1,0xF8,0xF8,0xF8,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFC,0xFC,0x3F,0x3F,0x3F,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x78,0x78,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF8,0xF8,0xFE,0xFE,0xFE,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x7F,0x7F,0x0F,0x0F,0x0F,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};





const unsigned char BGTile[] =
{
  0xFF,0xFF,0xFB,0xFB,0xFF,0xFF,0xFF,0xFF,
  0xFF,0xFF,0x7F,0x7F,0xF7,0xF7,0xFF,0xFF
};




#include <gb/gb.h>
#include <rand.h>
#include <stdio.h>


void vblint(void);


void update_graphics(void);

void do_gameplay(void);

void update_joypad(void);

void update_badguy(void);

void collision_detection(void);


void draw_title_screen(void);

void load_game_tiles(void);

fixed seed;


void main() {
    seed.b.l = DIV_REG;

    SWITCH_ROM_MBC1(3);

    draw_title_screen();

    seed.b.h = DIV_REG;

    initrand(seed.w);

    load_game_tiles();

    disable_interrupts();

    add_VBL(vblint);

    SWITCH_ROM_MBC1(2);
    
    enable_interrupts();
    
    do_gameplay();

    reset();
}

void vblint(void) {
    SWITCH_ROM_MBC1(2);

    update_graphics();
}






const unsigned char SpriteTiles[] =
{
  0x40,0x40,0xE0,0xA0,0xFE,0x80,0xC8,0xB8,
  0x8C,0xF4,0x96,0xEA,0xA9,0xD7,0xFF,0xFF,
  0x02,0x40,0xC5,0xA3,0xE5,0xBB,0xF5,0xAB,
  0xF5,0xAB,0xF5,0xAB,0xFD,0xBB,0x42,0x42,
  0x00,0x00,0x00,0x18,0x18,0x3C,0x3C,0x66,
  0x3C,0x66,0x18,0x3C,0x00,0x18,0x00,0x00
};




#include <gb/gb.h>
#include <gb/drawing.h>
#include <rand.h>

const UBYTE badguy_ai[] = {
    32,  32,  33,  34,  35,  35,  36,  37,
    38,  38,  39,  40,  41,  41,  42,  43,
    44,  44,  45,  46,  46,  47,  48,  48,
    49,  50,  50,  51,  51,  52,  53,  53,
    54,  54,  55,  55,  56,  56,  57,  57,
    58,  58,  58,  59,  59,  60,  60,  60,
    61,  61,  61,  61,  62,  62,  62,  62,
    62,  63,  63,  63,  63,  63,  63,  63,
    63,  63,  63,  63,  63,  63,  63,  63,
    62,  62,  62,  62,  62,  61,  61,  61,
    61,  60,  60,  60,  59,  59,  59,  58,
    58,  57,  57,  56,  56,  55,  55,  54,
    54,  53,  53,  52,  52,  51,  50,  50,
    49,  49,  48,  47,  47,  46,  45,  44,
    44,  43,  42,  42,  41,  40,  39,  39,
    38,  37,  36,  36,  35,  34,  33,  33,
    32,  31,  30,  29,  29,  28,  27,  26,
    26,  25,  24,  23,  23,  22,  21,  20,
    20,  19,  18,  18,  17,  16,  16,  15,
    14,  14,  13,  12,  12,  11,  11,  10,
    9,  9,  8,  8,  7,  7,  6,  6,
    6,  5,  5,  4,  4,  4,  3,  3,
    3,  2,  2,  2,  1,  1,  1,  1,
    1,  1,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,
    1,  1,  1,  1,  1,  1,  2,  2,
    2,  3,  3,  3,  4,  4,  4,  5,
    5,  5,  6,  6,  7,  7,  8,  8,
    9,  9,  10,  11,  11,  12,  12,  13,
    14,  14,  15,  16,  16,  17,  18,  18,
    19,  20,  20,  21,  22,  23,  23,  24,
    25,  26,  26,  27,  28,  29,  29,  30
};

UBYTE playing, joypad_state;

UBYTE player_x, player_y;

UBYTE badguy_x, badguy_y, badguy_z, badguy_offset;

UBYTE player_shot_x, player_shot_y, player_shot_z;

void update_graphics(void) {
    disable_interrupts();
    
    scroll_bkg(1, 0);

    move_sprite(0, player_x, player_y);

    move_sprite(1, badguy_x, badguy_y);

    move_sprite(2, player_shot_x, player_shot_y);

    enable_interrupts();
}

void update_joypad(void) {    
    joypad_state = joypad();
    
    if(joypad_state & J_LEFT) {
        if(player_x > 8)
            player_x--;
    }
    if(joypad_state & J_RIGHT) {
        if(player_x < 160)
            player_x++;
    }
    if(joypad_state & J_UP) {
        if(player_y > 16)
            player_y--;
    }
    if(joypad_state & J_DOWN) {
        if(player_y < 152)
            player_y++;
    }

    if(joypad_state & J_A) {
        if(player_shot_z == 0) {
            player_shot_z = 1;
            player_shot_x = player_x;
            player_shot_y = player_y;
        }
    }
    if(player_shot_z == 1) {
        player_shot_x = player_shot_x + 2;
        if(player_shot_x > 240) {
            player_shot_x = 250;
            player_shot_y = 250;
            player_shot_z = 0;
        }
    }
}

void update_badguy(void) {
    badguy_x = badguy_x - 1;
    if(badguy_x > 240) {
        badguy_offset = rand();
        while(badguy_offset > 134) {
            badguy_offset = rand();
        }

        badguy_x = 239;
    }

    badguy_y = badguy_offset + badguy_ai[badguy_z];

    badguy_z++;
}


void collision_detection(void) {
    if(player_shot_y > badguy_y - 4) {
        if(player_shot_y < badguy_y + 4) {
            if(player_shot_x > badguy_x - 4) {
                if(player_shot_x < badguy_x + 4) {
                    player_shot_z = 0;
                    player_shot_x = 250;
                    player_shot_y = 250;
                    badguy_x = 255;
                }
            }
        }
    }

    if(player_y > badguy_y - 4) {
        if(player_y < badguy_y + 4) {
            if(player_x > badguy_x - 4) {
                if(player_x < badguy_x + 4) {
                    playing = 0;
                    delay(1000);
                }
            }
        }
    }
}

void do_gameplay(void) {
    playing = 1;
    
    player_x = GRAPHICS_WIDTH / 2;
    player_y = GRAPHICS_HEIGHT / 2;

    while(playing == 1) {       
        update_joypad();
        update_badguy();
        collision_detection();
        delay(10);
    }
}




## move_sprite

#include <gb/gb.h>
#include 

void main() {
    int x = 55;
    int y = 75;

    SPRITES_8x8;
    set_sprite_data(0, 0, ufo);
    set_sprite_tile(0, 0);
    move_sprite(0, x, y);

    SHOW_SPRITES;

    while(1) {
        if(joypad() & J_RIGHT) {
            x++;
            move_sprite(0, x, y);
            delay(10);
        }
        if(joypad() & J_LEFT) {
            x--;
            move_sprite(0, x, y);
            delay(10);
        }
        if(joypad() & J_UP) {
            y--;
            move_sprite(0, x, y);
            delay(10);
        }
        if(joypad() & J_DOWN) {
            y++;
            move_sprite(0, x, y);
            delay(10);
        }
    }
}





unsigned char ufo[] =
{
  0x5A,0x3C,0xE3,0x42,0x7C,0x99,0xEB,0xA5,
  0xFB,0xA5,0x66,0x99,0xE7,0x42,0x5A,0x3C
};






## font

#include <stdio.h> 
#include <gb/gb.h>
#include <gbdk/font.h>

void main() {
	font_init(); 
	font_set(font_load(font_spect)); 
	printf();
}




## .git



## objects



## pack



## info



## info



## logs



## refs



## heads



## remotes



## origin



## hooks



## refs



## heads



## tags



## remotes



## origin



## small_sprite




unsigned char sprite[] =
{
  0x7E,0x7E,0x99,0x99,0x81,0x81,0xA5,0xA5,
  0x81,0x81,0xDB,0xDB,0xC3,0xC3,0x3C,0x3C
};




#include <gb/gb.h>
#include 

void main() {
    SPRITES_8x8;
    set_sprite_data(0, 8, sprite);
    set_sprite_tile(0, 0);
    move_sprite(0, 50, 50);
    SHOW_SPRITES;
}




## input_state

#include <stdio.h>
#include <gb/gb.h>

void main() {
    while(1) {
        switch(joypad()) {
            case J_LEFT:
                printf();
                break;
            case J_RIGHT:
                printf();
                break;
            case J_UP:
                printf();
                break;
            case J_DOWN:
                printf();
                break;
            case J_START:
                printf();
                break;
            case J_SELECT:
                printf();
                break;
            case J_A:
                printf();
                break;
            case J_B:
                printf();
                break;
        }
        delay(100);
    }
}




## detect_gb

#include <gb/gb.h>
#include <stdio.h>

extern UBYTE _cpu;

void main() {
	switch (_cpu) {
	case 0x01:
		printf();
		break;
	case 0xFF:
		printf();
		break;
	case 0x11:
		printf();
		break;
	default:
		printf();
		break;
	}
}

